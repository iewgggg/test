name: Test Action

on:
  repository_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: [10.x]
        os: [ubuntu-latest]
    steps:
      - name: test repository_dispatch
        if: github.event_name == 'repository_dispatch'
        run: |
          echo '${{ toJSON(github.event) }}'

      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v1
        continue-on-error: true
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
        env:
          GITHUB_EVENT_NAME: push

      - run: npm install

      - run: npm run build
        env:
          ENV_USER: ${{ secrets.ENV_USER }}

      - name: site
        run: npm run gh-pages
        env:
          NODE_DEBUG: gh-pages
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_REPOSITORY1: ${{ github.event.client_payload.repository }}
          GIT_CONFIG_NAME:  ${{ github.actor }}
          GIT_CONFIG_EMAIL: '${{ github.actor }}@users.noreply.github.com'
